#debug=true
# Unfortunately, Spring Boot does not see my 'logback.xml' file in class path. So I had to specify it explicitly
# == https://docs.spring.io/spring-boot/docs/2.0.1.RELEASE/reference/html/boot-features-logging.html#boot-features-custom-log-configuration
logging.config=classpath:logback.xml
spring.datasource.url=jdbc:mysql://localhost:3306/authtion?useUnicode=yes&characterEncoding=UTF-8&useSSL=false
spring.datasource.username=root
spring.datasource.password=1
# 1) automatically fill the schema (DDL script), see = resources/schema.sql
# 2) and initialize DataSource (DML script), see = resources/data.sql
# 3) and disable attempts Hibernate to fill schemas based on Entity configuration
# == https://docs.spring.io/spring-boot/docs/2.0.1.RELEASE/reference/html/howto-database-initialization.html#howto-initialize-a-database-using-spring-jdbc
spring.datasource.initialization-mode=always
spring.jpa.hibernate.ddl-auto=none
# disables all endpoints
# == https://docs.spring.io/spring-boot/docs/2.0.1.RELEASE/reference/html/production-ready-endpoints.html#production-ready-customizing-endpoints
management.endpoints.enabled-by-default=false
# Pretty-print JSON responses
spring.jackson.serialization.indent_output=true
# http://www.baeldung.com/spring-email
# https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-email.html
spring.mail.host=smtp.yandex.ru
spring.mail.port=465
spring.mail.username=noreply@dwfe.ru
spring.mail.password=***********************
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.ssl.enable=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=3000
spring.mail.properties.mail.smtp.writetimeout=5000
google.captcha.secret-key=6LfGxk4UAAAAANI6LF6Gn-lN5NxJGZh0UT3POwSA